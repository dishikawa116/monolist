{"filter":false,"title":"slime.php","tooltip":"/slime.php","ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":11,"column":35},"end":{"row":11,"column":35},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"hash":"90ed48dc1a1f786714808c2f3be99389f0944760","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":24,"column":1},"action":"insert","lines":["<?php","","require_once 'character.php';","","class Slime extends Character {","    // クラス変数なので、初期化段階で代入する","    public static $type = 'スライム';","","    public $suffix = '';","","    function __construct($suffix) {","        parent::__construct(10, 3);","        $this->suffix = $suffix;","    }","","    function name() {","        // parent::name() は、 $this::$type を返すので、","        // この Slime クラスのクラス変数 $type ('スライム') を返す","        return parent::name() . $this->suffix;","    }","","    static function description() {","        print self::$type . 'は、最弱のモンスターだ！' . PHP_EOL;","    }","}"],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":78,"column":24},"action":"insert","lines":["class A extends C {","    public $x_a;","","    function y_a() {","        // ...","    }","}","","class B extends C {","    public $x_b;","","    function y_b() {","        // ...","    }","}","We separated the common elements of A and B out into C, and then had A and B inherit C’s functionality.","","Let’s consider the more specific example of characters in our game. We already made a class Slime, so now let’s create a class Hero protagonist as well. We’ll give class Slime and class Hero exactly the same $hp variable and attack() function. In other words, they’ll share certain common attributes as characters. So let’s wrap the common functionality in a class Character, and have both class Slime and class Hero inherit from class Character.","","The parameter for function attack($character) also takes an object-type $character rather than a string-type $character_name, and we’ve added a new function defeat($character) method.","","test_class.php","","<?php","","class Character {","    public $type = '';","","    public $hp = 1;","    public $power = 1;","","    function __construct($type, $hp, $power) {","        $this->type = $type;","        $this->hp = $hp;","        $this->power = $power;","    }","","    function name() {","        return $this->type;","    }","","    function attack($character) {","        $character->hp = $character->hp - $this->power;","        print $this->name() . 'が' . $character->name() . 'を攻撃して' . $this->power . 'ポイントのダメージを与えた！' . PHP_EOL;","","        if ($character->hp <= 0) {","            $this->defeat($character);","        }","    }","","    function defeat($character) {","        print $this->name() . 'は' . $character->name() . 'を倒した！' . PHP_EOL;","    }","}","","class Slime extends Character {","    public $suffix = '';","","    function __construct($suffix) {","        parent::__construct('スライム', 10, 3);","        $this->suffix = $suffix;","    }","","    function name() {","        return parent::name() . $this->suffix;","    }","}","","class Hero extends Character {","    function __construct() {","        parent::__construct('主人公', 1000, 30);","    }","}","","$hero = new Hero();","$slime_A = new Slime('A');","","$slime_A->attack($hero);","$hero->attack($slime_A);"],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":24,"column":1},"action":"remove","lines":["<?php","","require_once 'character.php';","","class Slime extends Character {","    // クラス変数なので、初期化段階で代入する","    public static $type = 'スライム';","","    public $suffix = '';","","    function __construct($suffix) {","        parent::__construct(10, 3);","        $this->suffix = $suffix;","    }","","    function name() {","        // parent::name() は、 $this::$type を返すので、","        // この Slime クラスのクラス変数 $type ('スライム') を返す","        return parent::name() . $this->suffix;","    }","","    static function description() {","        print self::$type . 'は、最弱のモンスターだ！' . PHP_EOL;","    }","}"],"id":3}]]},"timestamp":1526611567151}